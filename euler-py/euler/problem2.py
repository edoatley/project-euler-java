# Problem 2 - Even Fibonacci numbers
# ==================================
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
#   *
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.
#
import time


def main():
    return sum(even_fibs(4000000))

def even_fibs(limit):
    f1 = 0
    f2 = 1
    while f1 < limit:
        tmp = f1
        f1 = f2
        f2 = tmp + f2
        if f1 %2 == 0:
            yield f1

if __name__ == '__main__':
    print("Start")
    start = time.process_time()
    print(f"Total {main()}")
    print(f"Ended {time.process_time() - start}")
